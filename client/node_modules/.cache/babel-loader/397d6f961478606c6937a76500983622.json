{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/personal-blog/src/components/Post/index.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Moment from \"react-moment\";\nimport Header from \"../Header\";\n\nconst Post = () => {\n  const postData = [{\n    id: 1,\n    imageURL: \"/images/wwdc.jpeg\",\n    title: \"애플 2020 WWDC 발표하다!\",\n    tag: \"Tech\",\n    text: \"첫 번째, iOS14\" + \"홈 화면\" + \"너무 앱이 많아서 페이지를 정리하기 어려울 때 자동으로 정리해주는 앱 라이브러리 기능을 선보인다. 맥OS의 스택과 비슷한 기능이다. 앱 라이브러리는 홈 화면을 지정하는 것으로, 볼 것과 숨길 것을 고를 수 있다. 앱 라이브러리에서 한번 탭으로 바로 앱을 실행할 수 있다.\" + \"검색에서 쉽게 앱을 찾을 수 있으며 사용할만한 앱을 AI로 자동으로 추천한다.\",\n    editor: \"김두완\",\n    nickname: \"kei\",\n    date: \"2020-06-02T07:54:30.000Z\"\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), postData.map((postDetailData, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DetailBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, postDetailData.title), /*#__PURE__*/React.createElement(Date, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Editor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"by \", postDetailData.nickname), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"\\u30FB \"), /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY. MM. DD\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, postDetailData.date)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/wwdc.jpeg\",\n    alt: \"wwdc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, postDetailData.text), /*#__PURE__*/React.createElement(TagBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DevTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, postDetailData.tag)))))));\n};\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: #f4f2f2;\n`;\nconst Wrapper = styled.div`\n  position: relative;\n`;\nconst DetailBox = styled.div`\n  position: relative;\n  width: 1000px;\n  left: 50%;\n  transform: translateX(-50%);\n`;\nconst Title = styled.div`\n  font-size: 50px;\n  margin-top: 20px;\n`;\nconst Editor = styled.span`\n  margin-right: 15px;\n`;\nconst Date = styled.div`\n  margin-top: 70px;\n`;\nconst Image = styled.div`\n  width: 0 auto;\n  height: 0 auto;\n  text-align: center;\n  margin-top: 40px;\n  margin-bottom: 40px;\n`;\nconst Text = styled.div`\n  line-height: 35px;\n`;\nconst TagBox = styled.div`\n  display: flex;\n`;\nconst DevTag = styled.div`\n  width: 0 auto;\n  height: 30px;\n  background: #f4f2f2;\n  color: #495057;\n  text-align: center;\n  padding-top: 5px;\n  padding-left: 20px;\n  padding-right: 20px;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  margin-top: 60px;\n  cursor: pointer;\n`;\nexport default Post;","map":{"version":3,"sources":["/Users/mac/Desktop/personal-blog/src/components/Post/index.tsx"],"names":["React","styled","Moment","Header","Post","postData","id","imageURL","title","tag","text","editor","nickname","date","map","postDetailData","index","marginLeft","Container","div","Wrapper","DetailBox","Title","Editor","span","Date","Image","Text","TagBox","DevTag"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Moment from \"react-moment\"\n\nimport Header from \"../Header\"\n\nconst Post = () => {\n  const postData = [\n    {\n      id: 1,\n      imageURL: \"/images/wwdc.jpeg\",\n      title: \"애플 2020 WWDC 발표하다!\",\n      tag: \"Tech\",\n      text:\n        \"첫 번째, iOS14\" +\n        \"홈 화면\" +\n        \"너무 앱이 많아서 페이지를 정리하기 어려울 때 자동으로 정리해주는 앱 라이브러리 기능을 선보인다. 맥OS의 스택과 비슷한 기능이다. 앱 라이브러리는 홈 화면을 지정하는 것으로, 볼 것과 숨길 것을 고를 수 있다. 앱 라이브러리에서 한번 탭으로 바로 앱을 실행할 수 있다.\" +\n        \"검색에서 쉽게 앱을 찾을 수 있으며 사용할만한 앱을 AI로 자동으로 추천한다.\",\n      editor: \"김두완\",\n      nickname: \"kei\",\n      date: \"2020-06-02T07:54:30.000Z\",\n    },\n  ]\n  return (\n    <Container>\n      <Header />\n      {postData.map((postDetailData: any, index: number) => (\n        <React.Fragment key={index}>\n          <Wrapper>\n            <DetailBox>\n              <Title>{postDetailData.title}</Title>\n              <Date>\n                <Editor>by {postDetailData.nickname}</Editor>\n                <span>・ </span>\n                <Moment format=\"YYYY. MM. DD\" style={{ marginLeft: \"10px\" }}>\n                  {postDetailData.date}\n                </Moment>\n              </Date>\n              <hr />\n              <Image>\n                <img src=\"/images/wwdc.jpeg\" alt=\"wwdc\" />\n              </Image>\n              <Text>{postDetailData.text}</Text>\n              <TagBox>\n                <DevTag>{postDetailData.tag}</DevTag>\n              </TagBox>\n            </DetailBox>\n          </Wrapper>\n        </React.Fragment>\n      ))}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: #f4f2f2;\n`\n\nconst Wrapper = styled.div`\n  position: relative;\n`\n\nconst DetailBox = styled.div`\n  position: relative;\n  width: 1000px;\n  left: 50%;\n  transform: translateX(-50%);\n`\n\nconst Title = styled.div`\n  font-size: 50px;\n  margin-top: 20px;\n`\n\nconst Editor = styled.span`\n  margin-right: 15px;\n`\n\nconst Date = styled.div`\n  margin-top: 70px;\n`\n\nconst Image = styled.div`\n  width: 0 auto;\n  height: 0 auto;\n  text-align: center;\n  margin-top: 40px;\n  margin-bottom: 40px;\n`\n\nconst Text = styled.div`\n  line-height: 35px;\n`\n\nconst TagBox = styled.div`\n  display: flex;\n`\n\nconst DevTag = styled.div`\n  width: 0 auto;\n  height: 30px;\n  background: #f4f2f2;\n  color: #495057;\n  text-align: center;\n  padding-top: 5px;\n  padding-left: 20px;\n  padding-right: 20px;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  margin-top: 60px;\n  cursor: pointer;\n`\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}